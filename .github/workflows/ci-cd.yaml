name: CI-CD

on:
  workflow_dispatch:
    
permissions:
      id-token: write
      contents: read

env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"

jobs:

  build-push:
    name: Build and Push Image
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build the frontend image and push it to ACR
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/final-project:test
          file: ./Dockerfile

      - name: Login via Azure Service Principal
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Set the target AKS cluster.
      - name: Set k8s context 
        uses: Azure/aks-set-context@v4
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: finlab-aks
          resource-group: rg-icasado-dvfinlab

      - name: Set AKS secrets
        uses: Azure/k8s-create-secret@v4
        with:
          container-registry-url: ${{ secrets.ACR_LOGIN_SERVER }}
          container-registry-username: ${{ secrets.ACR_USERNAME }}
          container-registry-password: ${{ secrets.ACR_PASSWORD }}
          secret-name: acr-secret
          
      - name: Deploy AKS
        uses: Azure/k8s-deploy@v5
        with:
          action: deploy
          manifests: |
              ./deployment.yaml
          images: |
              ${{ secrets.ACR_LOGIN_SERVER }}/final-project:test
          imagepullsecrets: |
              acr-secrets
  ansible:
    name: Ansible deployment
    runs-on: self-hosted

    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      - name: Install Ansible
        run: |
          sudo apt update -y && sudo apt upgrade -y && sudo apt install ansible -y
      - name: Install mysql-client
        run: |
          sudo apt install mysql-client -y

      - name: Run Playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: main.yaml
          directory: ./ansible/
          key: ${{secrets.SSH_PRIVATE_KEY}}
          inventory: |
            [mysql_server]
            vm-db ansible_host=10.0.0.4

            [all:vars]
            ansible_user=vm1
          options: |
            --inventory .inventory.ini
            --extra-vars db_username=$DB_USERNAME db_password=$DB_PASSWORD